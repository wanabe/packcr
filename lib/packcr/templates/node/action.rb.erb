{
    pcc_thunk_t *const thunk = pcc_thunk__create_leaf(ctx->auxil, pcc_action_<%= gen.rule.name %>_<%= index %>, <%= gen.rule.vars.length %>, <%= gen.rule.capts.length %>);
<%- vars.each do |var| -%>
    thunk->data.leaf.value_refs.buf[<%= var.index %>] = &(chunk->values.buf[<%= var.index %>]);
<%- end -%>
<%- capts.each do |capt| -%>
    thunk->data.leaf.capts.buf[<%= capt.index %>] = &(chunk->capts.buf[<%= capt.index %>]);
<%- end -%>
    thunk->data.leaf.capt0.range.start = NUM2SIZET(rb_ivar_get(chunk->robj, rb_intern("@pos")));
    thunk->data.leaf.capt0.range.end = NUM2SIZET(rb_ivar_get(ctx->robj, rb_intern("@cur")));
<%- if gen.location -%>
    thunk->data.leaf.capt0.range.start_loc = rb_ivar_get(chunk->robj, rb_intern("@pos_loc"));
    thunk->data.leaf.capt0.range.end_loc = rb_ivar_get(ctx->robj, rb_intern("@cur_loc"));
<%- end -%>
    rb_funcall(rb_ivar_get(chunk->robj, rb_intern("@thunks")), rb_intern("push"), 1, thunk->robj);
}
