{
<%- if min > 0 -%>
    const size_t p0 = ctx->position_offset;
<%-   if gen.location -%>
    const packcr_location_t p0_loc = ctx->position_offset_loc;
<%-   end -%>
    const size_t n0 = chunk->thunks.len;
<%- end -%>
    int i;
<%- if max < 0 -%>
    for (i = 0;; i++) {
<%- else -%>
    for (i = 0; i < <%= max %>; i++) {
<%- end -%>
        const size_t p = ctx->position_offset;
<%- if gen.location -%>
        const packcr_location_t p_loc = ctx->position_offset_loc;
<%- end -%>
        const size_t n = chunk->thunks.len;
<%- l = gen.next_label -%>
<%- r = expr.reachability -%>
<%= gen.generate_code(expr, l, 8, false) -%>
        if (ctx->position_offset == p) break;
<%- if r != Packcr::CODE_REACH__ALWAYS_SUCCEED -%>
        continue;
    L<%= format("%04d", l) %>:;
        ctx->position_offset = p;
<%-   if gen.location -%>
        ctx->position_offset_loc = p_loc;
<%-   end -%>
        packcr_thunk_array__revert(ctx->auxil, &chunk->thunks, n);
        break;
<%- end -%>
    }
<%- if min > 0 -%>
    if (i < <%= min %>) {
        ctx->position_offset = p0;
<%-   if gen.location -%>
        ctx->position_offset_loc = p0_loc;
<%-   end -%>
        packcr_thunk_array__revert(ctx->auxil, &chunk->thunks, n0);
        goto L<%= format("%04d", onfail) %>;
    }
<%- end -%>
}
