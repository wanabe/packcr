{
    <%- l = gen.next_label -%>
    <%- m = gen.next_label -%>
    <%- -%><%= gen.generate_code(expr, l, 4, true) -%>
    goto L<%= format("%04d", m) %>;
L<%= format("%04d", l) %>:;
    {
        packcr_value_t null;
        packcr_thunk_t *const thunk = packcr_thunk__create_leaf(ctx->auxil, packcr_action_<%= gen.rule.name %>_<%= index %>, <%= gen.rule.vars.length %>, <%= gen.rule.capts.length %>);
<%- vars.each do |var| -%>
        thunk->data.leaf.values.buf[<%= var.index %>] = &(chunk->values.buf[<%= var.index %>]);
<%- end -%>
<%- capts.each do |capt| -%>
        thunk->data.leaf.capts.buf[<%= capt.index %>] = &(chunk->capts.buf[<%= capt.index %>]);
<%- end -%>
        thunk->data.leaf.capt0.range.start = chunk->pos;
        thunk->data.leaf.capt0.range.end = ctx->position_offset;
<%- if gen.location -%>
        thunk->data.leaf.capt0.range.start_loc = chunk->pos_loc;
        thunk->data.leaf.capt0.range.end_loc = ctx->position_offset_loc;
<%- end -%>
        memset(&null, 0, sizeof(packcr_value_t)); /* in case */
        thunk->data.leaf.action(ctx, thunk, &null);
        packcr_thunk__destroy(ctx->auxil, thunk);
    }
    goto L<%= format("%04d", onfail) %>;
L<%= format("%04d", m) %>:;
}
